[{"/home/yudaaditya/Desktop/ladaza-project/client/src/index.js":"1","/home/yudaaditya/Desktop/ladaza-project/client/src/App.js":"2","/home/yudaaditya/Desktop/ladaza-project/client/src/reportWebVitals.js":"3","/home/yudaaditya/Desktop/ladaza-project/client/src/store/index.js":"4","/home/yudaaditya/Desktop/ladaza-project/client/src/urlConfig.js":"5","/home/yudaaditya/Desktop/ladaza-project/client/src/actions/index.js":"6","/home/yudaaditya/Desktop/ladaza-project/client/src/components/Layout/index.js":"7","/home/yudaaditya/Desktop/ladaza-project/client/src/actions/product.action.js":"8","/home/yudaaditya/Desktop/ladaza-project/client/src/actions/category.action.js":"9","/home/yudaaditya/Desktop/ladaza-project/client/src/actions/constants.js":"10","/home/yudaaditya/Desktop/ladaza-project/client/src/components/Header/index.js":"11","/home/yudaaditya/Desktop/ladaza-project/client/src/helpers/axios.js":"12","/home/yudaaditya/Desktop/ladaza-project/client/src/reducers/index.js":"13","/home/yudaaditya/Desktop/ladaza-project/client/src/containers/HomePage/index.js":"14","/home/yudaaditya/Desktop/ladaza-project/client/src/reducers/product.reducer.js":"15","/home/yudaaditya/Desktop/ladaza-project/client/src/reducers/category.reducer.js":"16","/home/yudaaditya/Desktop/ladaza-project/client/src/components/UI/Cart.js":"17","/home/yudaaditya/Desktop/ladaza-project/client/src/actions/auth.action.js":"18","/home/yudaaditya/Desktop/ladaza-project/client/src/components/MaterialUI/index.js":"19","/home/yudaaditya/Desktop/ladaza-project/client/src/reducers/auth.reducer.js":"20","/home/yudaaditya/Desktop/ladaza-project/client/src/actions/cart.action.js":"21","/home/yudaaditya/Desktop/ladaza-project/client/src/containers/ProductDetailsPage/index.js":"22","/home/yudaaditya/Desktop/ladaza-project/client/src/containers/ProductListPage/index.js":"23","/home/yudaaditya/Desktop/ladaza-project/client/src/utils/getParams.js":"24","/home/yudaaditya/Desktop/ladaza-project/client/src/containers/ProductListPage/ProductStore/index.js":"25","/home/yudaaditya/Desktop/ladaza-project/client/src/containers/ProductListPage/ProductPage/index.js":"26","/home/yudaaditya/Desktop/ladaza-project/client/src/components/UI/Card/index.js":"27","/home/yudaaditya/Desktop/ladaza-project/client/src/components/MenuHeader/index.js":"28","/home/yudaaditya/Desktop/ladaza-project/client/src/containers/CartPage/index.js":"29","/home/yudaaditya/Desktop/ladaza-project/client/src/reducers/cart.reducer.js":"30","/home/yudaaditya/Desktop/ladaza-project/client/src/containers/CartPage/CartItem/index.js":"31","/home/yudaaditya/Desktop/ladaza-project/client/src/actions/user.action.js":"32","/home/yudaaditya/Desktop/ladaza-project/client/src/containers/CheckoutPage/index.js":"33","/home/yudaaditya/Desktop/ladaza-project/client/src/containers/CheckoutPage/AddressForm.js":"34","/home/yudaaditya/Desktop/ladaza-project/client/src/reducers/user.reducer.js":"35","/home/yudaaditya/Desktop/ladaza-project/client/src/components/PriceDetails/index.js":"36"},{"size":639,"mtime":1608649333953,"results":"37","hashOfConfig":"38"},{"size":1301,"mtime":1609137084842,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":1608624562494,"results":"40","hashOfConfig":"38"},{"size":303,"mtime":1608804863373,"results":"41","hashOfConfig":"38"},{"size":153,"mtime":1609141113975,"results":"42","hashOfConfig":"38"},{"size":162,"mtime":1609126463850,"results":"43","hashOfConfig":"38"},{"size":278,"mtime":1608808307920,"results":"44","hashOfConfig":"38"},{"size":2003,"mtime":1608801432614,"results":"45","hashOfConfig":"38"},{"size":752,"mtime":1609140376458,"results":"46","hashOfConfig":"38"},{"size":1908,"mtime":1609126438682,"results":"47","hashOfConfig":"38"},{"size":10777,"mtime":1609137406709,"results":"48","hashOfConfig":"38"},{"size":281,"mtime":1608649252723,"results":"49","hashOfConfig":"38"},{"size":464,"mtime":1609127321732,"results":"50","hashOfConfig":"38"},{"size":310,"mtime":1608808205723,"results":"51","hashOfConfig":"38"},{"size":1949,"mtime":1608825734442,"results":"52","hashOfConfig":"38"},{"size":2279,"mtime":1608828181200,"results":"53","hashOfConfig":"38"},{"size":841,"mtime":1608738818083,"results":"54","hashOfConfig":"38"},{"size":3264,"mtime":1608805803272,"results":"55","hashOfConfig":"38"},{"size":4575,"mtime":1609128216484,"results":"56","hashOfConfig":"38"},{"size":1360,"mtime":1608794617481,"results":"57","hashOfConfig":"38"},{"size":4484,"mtime":1608805090793,"results":"58","hashOfConfig":"38"},{"size":7058,"mtime":1608826478087,"results":"59","hashOfConfig":"38"},{"size":861,"mtime":1608793363251,"results":"60","hashOfConfig":"38"},{"size":441,"mtime":1608794230022,"results":"61","hashOfConfig":"38"},{"size":2956,"mtime":1609141079603,"results":"62","hashOfConfig":"38"},{"size":2346,"mtime":1608793206688,"results":"63","hashOfConfig":"38"},{"size":870,"mtime":1608826249227,"results":"64","hashOfConfig":"38"},{"size":1348,"mtime":1609140139931,"results":"65","hashOfConfig":"38"},{"size":4200,"mtime":1609128617034,"results":"66","hashOfConfig":"38"},{"size":1115,"mtime":1608826680942,"results":"67","hashOfConfig":"38"},{"size":1803,"mtime":1608826360713,"results":"68","hashOfConfig":"38"},{"size":2950,"mtime":1609137120590,"results":"69","hashOfConfig":"38"},{"size":13240,"mtime":1609128856088,"results":"70","hashOfConfig":"38"},{"size":8286,"mtime":1609128741963,"results":"71","hashOfConfig":"38"},{"size":1290,"mtime":1609128974425,"results":"72","hashOfConfig":"38"},{"size":1054,"mtime":1609128312309,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"4k19ix",{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"76"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"76"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"/home/yudaaditya/Desktop/ladaza-project/client/src/index.js",[],["161","162"],"/home/yudaaditya/Desktop/ladaza-project/client/src/App.js",["163","164"],"import React, {useEffect} from 'react';\nimport './App.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isUserLoggedIn, updateCart } from \"./actions\";\nimport HomePage from './containers/HomePage';\nimport ProductDetailsPage from \"./containers/ProductDetailsPage\";\nimport ProductListPage from \"./containers/ProductListPage\";\nimport CartPage from './containers/CartPage';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport CheckoutPage from './containers/CheckoutPage';\n\n\nfunction App() {\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    if (!auth.authenticate) {\n      dispatch(isUserLoggedIn());\n    }\n  }, [auth.authenticate]);\n\n  useEffect(() => {\n    console.log(\"App.js - updateCart\");\n    dispatch(updateCart());\n  }, []);\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={HomePage} />\n          <Route path=\"/cart\" component={CartPage} />\n          <Route path=\"/checkout\" component={CheckoutPage} />\n          <Route path=\"/:productSlug/:productId/p\" component={ProductDetailsPage} />\n          <Route path=\"/:slug\" component={ProductListPage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/yudaaditya/Desktop/ladaza-project/client/src/reportWebVitals.js",[],"/home/yudaaditya/Desktop/ladaza-project/client/src/store/index.js",[],"/home/yudaaditya/Desktop/ladaza-project/client/src/urlConfig.js",[],"/home/yudaaditya/Desktop/ladaza-project/client/src/actions/index.js",[],"/home/yudaaditya/Desktop/ladaza-project/client/src/components/Layout/index.js",[],"/home/yudaaditya/Desktop/ladaza-project/client/src/actions/product.action.js",[],"/home/yudaaditya/Desktop/ladaza-project/client/src/actions/category.action.js",[],"/home/yudaaditya/Desktop/ladaza-project/client/src/actions/constants.js",[],"/home/yudaaditya/Desktop/ladaza-project/client/src/components/Header/index.js",["165","166","167","168","169","170","171","172","173","174"],"import React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport flipkartLogo from \"../../images/logo/flipkart.png\";\nimport goldenStar from \"../../images/logo/golden-star.png\";\nimport { IoIosArrowDown, IoIosCart, IoIosSearch } from \"react-icons/io\";\nimport {\n    Modal,\n    MaterialInput,\n    MaterialButton,\n    DropdownMenu,\n} from \"../MaterialUI\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, signout, getCartItems, signup as _signup } from \"../../actions\";\nimport Cart from \"../UI/Cart\";\n\n/**\n * @author\n * @function Header\n **/\n\nconst Header = (props) => {\n    const [loginModal, setLoginModal] = useState(false);\n    const [signup, setSignup] = useState(false);\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const auth = useSelector((state) => state.auth);\n    const dispatch = useDispatch();\n\n    // state cart value\n    const cart = useSelector((state) => state.cart);\n\n    const userSignup = () => {\n        const user = { firstName, lastName, email, password };\n        if (\n            firstName === \"\" ||\n            lastName === \"\" ||\n            email === \"\" ||\n            password === \"\"\n        ) {\n            return;\n        }\n\n        dispatch(_signup(user));\n    };\n\n    const userLogin = () => {\n        if (signup) {\n            userSignup();\n        } else {\n            dispatch(login({ email, password }));\n        }\n    };\n\n    const logout = () => {\n        dispatch(signout());\n    };\n\n    useEffect(() => {\n        if (auth.authenticate) {\n            setLoginModal(false);\n        }\n    }, [auth.authenticate]);\n\n    useEffect(() => {\n      dispatch(getCartItems());\n    }, []);\n\n    const renderLoggedInMenu = () => {\n        return (\n            <DropdownMenu\n                menu={<a className=\"fullName\">{auth.user.fullName}</a>}\n                menus={[\n                    { label: \"My Profile\", href: \"\", icon: null },\n                    { label: \"SuperCoin Zone\", href: \"\", icon: null },\n                    { label: \"Flipkart Plus Zone\", href: \"\", icon: null },\n                    {\n                        label: \"Orders\",\n                        href: `/account/orders`,\n                        icon: null,\n                    },\n                    { label: \"Wishlist\", href: \"\", icon: null },\n                    { label: \"My Chats\", href: \"\", icon: null },\n                    { label: \"Coupons\", href: \"\", icon: null },\n                    { label: \"Rewards\", href: \"\", icon: null },\n                    { label: \"Notifications\", href: \"\", icon: null },\n                    { label: \"Gift Cards\", href: \"\", icon: null },\n                    { label: \"Logout\", href: \"\", icon: null, onClick: logout },\n                ]}\n            />\n        );\n    };\n\n    const renderNonLoggedInMenu = () => {\n        return (\n            <DropdownMenu\n                menu={\n                    <a\n                        className=\"loginButton\"\n                        onClick={() => {\n                            setSignup(false);\n                            setLoginModal(true);\n                        }}\n                    >\n                        Login\n          </a>\n                }\n                menus={[\n                    { label: \"My Profile\", href: \"\", icon: null },\n                    { label: \"Flipkart Plus Zone\", href: \"\", icon: null },\n                    {\n                        label: \"Orders\",\n                        href: `/account/orders`,\n                        icon: null,\n                        onClick: () => {\n                            !auth.authenticate && setLoginModal(true);\n                        },\n                    },\n                    { label: \"Wishlist\", href: \"\", icon: null },\n                    { label: \"Rewards\", href: \"\", icon: null },\n                    { label: \"Gift Cards\", href: \"\", icon: null },\n                ]}\n                firstMenu={\n                    <div className=\"firstmenu\">\n                        <span>New Customer?</span>\n                        <a\n                            onClick={() => {\n                                setLoginModal(true);\n                                setSignup(true);\n                            }}\n                            style={{ color: \"#2874f0\" }}\n                        >\n                            Sign Up\n            </a>\n                    </div>\n                }\n            />\n        );\n    };\n\n    return (\n        <div className=\"header\">\n            <Modal visible={loginModal} onClose={() => setLoginModal(false)}>\n                <div className=\"authContainer\">\n                    <div className=\"row\">\n                        <div className=\"leftspace\">\n                            <h2>Login</h2>\n                            <p>Get access to your Orders, Wishlist and Recommendations</p>\n                        </div>\n                        <div className=\"rightspace\">\n                            <div className=\"loginInputContainer\">\n                                {auth.error && (\n                                    <div style={{ color: \"red\", fontSize: 12 }}>{auth.error}</div>\n                                )}\n                                {signup && (\n                                    <MaterialInput\n                                        type=\"text\"\n                                        label=\"First Name\"\n                                        value={firstName}\n                                        onChange={(e) => setFirstName(e.target.value)}\n                                    />\n                                )}\n                                {signup && (\n                                    <MaterialInput\n                                        type=\"text\"\n                                        label=\"Last Name\"\n                                        value={lastName}\n                                        onChange={(e) => setLastName(e.target.value)}\n                                    />\n                                )}\n\n                                <MaterialInput\n                                    type=\"text\"\n                                    label=\"Email/Mobile Number\"\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                />\n                                <MaterialInput\n                                    type=\"password\"\n                                    label=\"Password\"\n                                    value={password}\n                                    onChange={(e) => setPassword(e.target.value)}\n                                // rightElement={<a href=\"#\">Forgot?</a>}\n                                />\n                                <MaterialButton\n                                    title={signup ? \"Register\" : \"Login\"}\n                                    bgColor=\"#fb641b\"\n                                    textColor=\"#ffffff\"\n                                    style={{\n                                        margin: \"40px 0 20px 0\",\n                                    }}\n                                    onClick={userLogin}\n                                />\n                                <p style={{ textAlign: \"center\" }}>OR</p>\n                                <MaterialButton\n                                    title=\"Request OTP\"\n                                    bgColor=\"#ffffff\"\n                                    textColor=\"#2874f0\"\n                                    style={{\n                                        margin: \"20px 0\",\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n            <div className=\"subHeader\">\n                {/* Logo  */}\n                <div className=\"logo\">\n                    <a href=\"\">\n                        <img src={flipkartLogo} className=\"logoimage\" alt=\"\" />\n                    </a>\n                    <a style={{ marginTop: \"-10px\" }}>\n                        <span className=\"exploreText\">Explore</span>\n                        <span className=\"plusText\">Plus</span>\n                        <img src={goldenStar} className=\"goldenStar\" alt=\"\" />\n                    </a>\n                </div>\n                {/* logo ends here */}\n\n                {/* search component */}\n                <div\n                    style={{\n                        padding: \"0 10px\",\n                    }}\n                >\n                    <div className=\"searchInputContainer\">\n                        <input\n                            className=\"searchInput\"\n                            placeholder={\"search for products, brands and more\"}\n                        />\n                        <div className=\"searchIconContainer\">\n                            <IoIosSearch\n                                style={{\n                                    color: \"#2874f0\",\n                                }}\n                            />\n                        </div>\n                    </div>\n                </div>\n                {/* search component ends here */}\n\n                {/* right side menu */}\n                <div className=\"rightMenu\">\n                    {auth.authenticate ? renderLoggedInMenu() : renderNonLoggedInMenu()}\n                    <DropdownMenu\n                        menu={\n                            <a className=\"more\">\n                                <span>More</span>\n                                <IoIosArrowDown />\n                            </a>\n                        }\n                        menus={[\n                            { label: \"Notification Preference\", href: \"\", icon: null },\n                            { label: \"Sell on flipkart\", href: \"\", icon: null },\n                            { label: \"24x7 Customer Care\", href: \"\", icon: null },\n                            { label: \"Advertise\", href: \"\", icon: null },\n                            { label: \"Download App\", href: \"\", icon: null },\n                        ]}\n                    />\n                    <div>\n                        <a href={`/cart`} className=\"cart\">\n                            <Cart count={Object.keys(cart.cartItems).length} />\n                            <span style={{ margin: \"0 10px\" }}>Cart</span>\n                        </a>\n                    </div>\n                </div>\n                {/* right side menu ends here */}\n            </div>\n        </div>\n    );\n};\n\nexport default Header;","/home/yudaaditya/Desktop/ladaza-project/client/src/helpers/axios.js",[],"/home/yudaaditya/Desktop/ladaza-project/client/src/reducers/index.js",[],"/home/yudaaditya/Desktop/ladaza-project/client/src/containers/HomePage/index.js",[],"/home/yudaaditya/Desktop/ladaza-project/client/src/reducers/product.reducer.js",["175","176"],"import { productConstants } from \"../actions/constants\";\n\nconst initState = {\n    products: [],\n    priceRange: {},\n    productsByPrice: {},\n    pageRequest: false,\n    page: {},\n    error: null,\n    productDetails: {},\n    loading: false,\n};\n\nexport default (state = initState, action) => {\n    switch (action.type) {\n        case productConstants.GET_PRODUCTS_BY_SLUG:\n            state = {\n                ...state,\n                products: action.payload.products,\n                priceRange: action.payload.priceRange,\n                productsByPrice: {\n                    ...action.payload.productsByPrice,\n                },\n            };\n            break;\n        case productConstants.GET_PRODUCT_PAGE_REQUEST:\n            state = {\n                ...state,\n                pageRequest: true,\n            };\n            break;\n        case productConstants.GET_PRODUCT_PAGE_SUCCESS:\n            state = {\n                ...state,\n                page: action.payload.page,\n                pageRequest: false,\n            };\n            break;\n        case productConstants.GET_PRODUCT_PAGE_FAILURE:\n            state = {\n                ...state,\n                pageRequest: false,\n                error: action.payload.error,\n            };\n            break;\n        case productConstants.GET_PRODUCT_DETAILS_BY_ID_REQUEST:\n            state = {\n                ...state,\n                loading: true,\n            };\n            break;\n        case productConstants.GET_PRODUCT_DETAILS_BY_ID_SUCCESS:\n            state = {\n                ...state,\n                loading: false,\n                productDetails: action.payload.productDetails,\n            };\n            break;\n        case productConstants.GET_PRODUCT_DETAILS_BY_ID_FAILURE:\n            state = {\n                ...state,\n                loading: false,\n                error: action.payload.error,\n            };\n            break;\n    }\n\n    return state;\n};\n","/home/yudaaditya/Desktop/ladaza-project/client/src/reducers/category.reducer.js",["177","178"],"import { categoryConstants } from \"../actions/constants\";\n\nconst initState = {\n    categories: [],\n    loading: false,\n    error: null\n};\n\n\nconst buildNewCategories = (parentId, categories, category) => {\n    let myCategories = [];\n\n    if(parentId === undefined){\n        return [\n            ...categories,\n            {\n                _id: category._id,\n                name: category.name,\n                slug: category.slug,\n                children: []\n            }\n        ];\n    }\n    \n    for(let cat of categories){\n\n        if(cat._id === parentId){\n            myCategories.push({\n                ...cat,\n                children: cat.children ? buildNewCategories(parentId, [...cat.children, {\n                    _id: category._id,\n                    name: category.name,\n                    slug: category.slug,\n                    parentId: category.parentId,\n                    children: category.children\n                }], category) : []\n            });\n        }else{\n            myCategories.push({\n                ...cat,\n                children: cat.children ? buildNewCategories(parentId, cat.children, category) : []\n            });\n        }\n\n        \n    }\n\n\n    return myCategories;\n}\n\n\nexport default (state = initState, action) => {\n    switch(action.type){\n        case categoryConstants.GET_ALL_CATEGORIES_SUCCESS:\n            state = {\n                ...state,\n                categories: action.payload.categories\n            }\n            break;\n        case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\n            const category = action.payload.category;\n            const updatedCategories = buildNewCategories(category.parentId, state.categories, category);\n            console.log('updated categoires', updatedCategories);\n            \n            state = {\n                ...state,\n                categories: updatedCategories,\n                loading: false,\n            }\n            break;\n        case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\n            state = {\n                ...initState\n            }\n            break;\n    }\n\n    return state;\n}","/home/yudaaditya/Desktop/ladaza-project/client/src/components/UI/Cart.js",[],"/home/yudaaditya/Desktop/ladaza-project/client/src/actions/auth.action.js",[],"/home/yudaaditya/Desktop/ladaza-project/client/src/components/MaterialUI/index.js",[],"/home/yudaaditya/Desktop/ladaza-project/client/src/reducers/auth.reducer.js",["179","180"],"import { authConstants } from \"../actions/constants\";\n\nconst initState = {\n    token: null,\n    user: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        picture: ''\n    },\n    authenticate: false,\n    authenticating: false,\n    loading: false,\n    error: null,\n    message: ''\n};\n\nexport default (state = initState, action) => {\n\n    console.log(action);\n\n    switch (action.type) {\n        case authConstants.LOGIN_REQUEST:\n            state = {\n                ...state,\n                authenticating: true\n            }\n            break;\n        case authConstants.LOGIN_SUCCESS:\n            state = {\n                ...state,\n                user: action.payload.user,\n                token: action.payload.token,\n                authenticate: true,\n                authenticating: false\n            }\n            break;\n        case authConstants.LOGOUT_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case authConstants.LOGOUT_SUCCESS:\n            state = {\n                ...initState\n            }\n            break;\n        case authConstants.LOGOUT_FAILURE:\n            state = {\n                ...state,\n                error: action.payload.error,\n                loading: false\n            }\n            break;\n\n    }\n\n\n    return state;\n}","/home/yudaaditya/Desktop/ladaza-project/client/src/actions/cart.action.js",[],"/home/yudaaditya/Desktop/ladaza-project/client/src/containers/ProductDetailsPage/index.js",["181","182","183","184","185"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProductDetailsById } from \"../../actions\";\nimport Layout from \"../../components/Layout\";\nimport { IoIosArrowForward, IoIosStar, IoMdCart } from \"react-icons/io\";\nimport { BiRupee } from \"react-icons/bi\";\nimport { AiFillThunderbolt } from \"react-icons/ai\";\nimport { MaterialButton } from \"../../components/MaterialUI\";\nimport \"./style.css\";\nimport { addToCart } from \"../../actions\";\n\n/**\n * @author\n * @function ProductDetailsPage\n **/\n\nconst ProductDetailsPage = (props) => {\n    const dispatch = useDispatch();\n    const product = useSelector((state) => state.product);\n\n    useEffect(() => {\n        const { productId } = props.match.params;\n        console.log(props);\n        const payload = {\n            params: {\n                productId,\n            },\n        };\n        dispatch(getProductDetailsById(payload));\n    }, []);\n\n    if (Object.keys(product.productDetails).length === 0) {\n        return null;\n    }\n\n    return (\n        <Layout>\n            {/* <div>{product.productDetails.name}</div> */}\n            <div className=\"productDescriptionContainer\">\n                <div className=\"flexRow\">\n                    <div className=\"verticalImageStack\">\n                        {product.productDetails.productPictures.map((thumb, index) => (\n                            <div className=\"thumbnail\">\n                                <img src={thumb.img} alt={thumb.img} />\n                            </div>\n                        ))}\n                    </div>\n                    <div className=\"productDescContainer\">\n                        <div className=\"productDescImgContainer\">\n                            <img\n                                src={product.productDetails.productPictures[0].img}\n                                alt={`${product.productDetails.productPictures[0].img}`}\n                            />\n                        </div>\n\n                        {/* action buttons */}\n                        <div className=\"flexRow\">\n                            <MaterialButton\n                                title=\"ADD TO CART\"\n                                bgColor=\"#ff9f00\"\n                                textColor=\"#ffffff\"\n                                style={{\n                                    marginRight: \"5px\",\n                                }}\n                                icon={<IoMdCart />}\n                                onClick={() => {\n                                    const { _id, name, price } = product.productDetails;\n                                    const img = product.productDetails.productPictures[0].img;\n                                    dispatch(addToCart({ _id, name, price, img }));\n                                    props.history.push(`/cart`);\n                                }}\n                            />\n                            <MaterialButton\n                                title=\"BUY NOW\"\n                                bgColor=\"#fb641b\"\n                                textColor=\"#ffffff\"\n                                style={{\n                                    marginLeft: \"5px\",\n                                }}\n                                icon={<AiFillThunderbolt />}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    {/* home > category > subCategory > productName */}\n                    <div className=\"breed\">\n                        <ul>\n                            <li>\n                                <a href=\"#\">Home</a>\n                                <IoIosArrowForward />\n                            </li>\n                            <li>\n                                <a href=\"#\">Mobiles</a>\n                                <IoIosArrowForward />\n                            </li>\n                            <li>\n                                <a href=\"#\">Samsung</a>\n                                <IoIosArrowForward />\n                            </li>\n                            <li>\n                                <a href=\"#\">{product.productDetails.name}</a>\n                            </li>\n                        </ul>\n                    </div>\n                    {/* product description */}\n                    <div className=\"productDetails\">\n                        <p className=\"productTitle\">{product.productDetails.name}</p>\n                        <div>\n                            <span className=\"ratingCount\">\n                                4.3 <IoIosStar />\n                            </span>\n                            <span className=\"ratingNumbersReviews\">\n                                72,234 Ratings & 8,140 Reviews\n              </span>\n                        </div>\n                        <div className=\"extraOffer\">\n                            Extra <BiRupee />\n              4500 off{\" \"}\n                        </div>\n                        <div className=\"flexRow priceContainer\">\n                            <span className=\"price\">\n                                <BiRupee />\n                                {product.productDetails.price}\n                            </span>\n                            <span className=\"discount\" style={{ margin: \"0 10px\" }}>\n                                22% off\n              </span>\n                            {/* <span>i</span> */}\n                        </div>\n                        <div>\n                            <p\n                                style={{\n                                    color: \"#212121\",\n                                    fontSize: \"14px\",\n                                    fontWeight: \"600\",\n                                }}\n                            >\n                                Available Offers\n              </p>\n                            <p style={{ display: \"flex\" }}>\n                                <span\n                                    style={{\n                                        width: \"100px\",\n                                        fontSize: \"12px\",\n                                        color: \"#878787\",\n                                        fontWeight: \"600\",\n                                        marginRight: \"20px\",\n                                    }}\n                                >\n                                    Description\n                </span>\n                                <span\n                                    style={{\n                                        fontSize: \"12px\",\n                                        color: \"#212121\",\n                                    }}\n                                >\n                                    {product.productDetails.description}\n                                </span>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default ProductDetailsPage;","/home/yudaaditya/Desktop/ladaza-project/client/src/containers/ProductListPage/index.js",[],"/home/yudaaditya/Desktop/ladaza-project/client/src/utils/getParams.js",["186"],"export default (query) => {\n    if (query) {\n        const queryString = query.split(\"?\")[1];\n        if (queryString.length > 0) {\n            const params = queryString.split(\"&\");\n            const paramsObj = {};\n            params.forEach(param => {\n                const keyValue = param.split(\"=\");\n                paramsObj[keyValue[0]] = keyValue[1];\n            });\n\n            return paramsObj;\n        }\n    }\n\n    return {};\n} ","/home/yudaaditya/Desktop/ladaza-project/client/src/containers/ProductListPage/ProductStore/index.js",["187","188"],"/home/yudaaditya/Desktop/ladaza-project/client/src/containers/ProductListPage/ProductPage/index.js",["189"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProductPage } from '../../../actions';\nimport getParams from '../../../utils/getParams';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport Card from '../../../components/UI/Card';\n\n/**\n* @author\n* @function ProductPage\n**/\n\nconst ProductPage = (props) => {\n\n    const dispatch = useDispatch();\n    const product = useSelector(state => state.product);\n    const { page } = product;\n\n    useEffect(() => {\n        const params = getParams(props.location.search);\n        console.log({ params });\n        const payload = {\n            params\n        }\n        dispatch(getProductPage(payload));\n    }, []);\n\n\n    return (\n        <div style={{ margin: '0 10px' }}>\n            <h3>{page.title}</h3>\n            <Carousel\n                renderThumbs={() => { }}\n            >\n                {\n                    page.banners && page.banners.map((banner, index) =>\n                        <a\n                            key={index}\n                            style={{ display: 'block' }}\n                            href={banner.navigateTo}\n                        >\n                            <img src={banner.img} alt=\"\" />\n                        </a>\n                    )\n                }\n            </Carousel>\n            <div style={{\n                display: 'flex',\n                justifyContent: 'center',\n                flexWrap: 'wrap',\n                margin: '10px 0'\n            }}>\n                {\n                    page.products && page.products.map((product, index) =>\n                        <Card\n                            key={index}\n                            style={{\n                                width: '400px',\n                                height: '200px',\n                                margin: '5px'\n                            }}\n                        >\n                            <img style={{\n                                width: '100%',\n                                height: '100%'\n                            }} src={product.img} alt=\"\" />\n                        </Card>\n                    )\n                }\n            </div>\n        </div>\n    )\n\n}\n\nexport default ProductPage","/home/yudaaditya/Desktop/ladaza-project/client/src/components/UI/Card/index.js",[],"/home/yudaaditya/Desktop/ladaza-project/client/src/components/MenuHeader/index.js",["190"],"import React, { useEffect } from 'react';\nimport './style.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllCategory } from '../../actions';\n\n/**\n* @author\n* @function MenuHeader\n**/\n\nconst MenuHeader = (props) => {\n\n    const category = useSelector(state => state.category);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getAllCategory());\n    }, []);\n\n\n    const renderCategories = (categories) => {\n        let myCategories = [];\n        for (let category of categories) {\n            myCategories.push(\n                <li key={category.name}>\n                    {\n                        category.parentId ? <a\n                            href={`/${category.slug}?cid=${category._id}&type=${category.type}`}>\n                            {category.name}\n                        </a> :\n                            <span>{category.name}</span>\n                    }\n                    {category.children.length > 0 ? (<ul>{renderCategories(category.children)}</ul>) : null}\n                </li>\n            );\n        }\n        return myCategories;\n    }\n    return (\n        <div className=\"menuHeader\">\n            <ul>\n                {category.categories.length > 0 ? renderCategories(category.categories) : null}\n            </ul>\n        </div>\n    )\n\n}\n\nexport default MenuHeader","/home/yudaaditya/Desktop/ladaza-project/client/src/containers/CartPage/index.js",["191"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Layout from \"../../components/Layout\";\nimport Card from \"../../components/UI/Card\";\nimport CartItem from \"./CartItem\";\nimport { addToCart, getCartItems, removeCartItem } from \"../../actions\";\nimport PriceDetails from \"../../components/PriceDetails\";\n\nimport \"./style.css\";\nimport { MaterialButton } from \"../../components/MaterialUI\";\n\n/**\n * @author\n * @function CartPage\n **/\n\n/*\nBefore Login\nAdd product to cart\nsave in localStorage\nwhen try to checkout ask for credentials and \nif logged in then add products to users cart database from localStorage\n*/\n\nconst CartPage = (props) => {\n    const cart = useSelector((state) => state.cart);\n    const auth = useSelector((state) => state.auth);\n    // const cartItems = cart.cartItems;\n    const [cartItems, setCartItems] = useState(cart.cartItems);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        setCartItems(cart.cartItems);\n    }, [cart.cartItems]);\n\n    useEffect(() => {\n        if (auth.authenticate) {\n            dispatch(getCartItems());\n        }\n    }, [auth.authenticate]);\n\n    const onQuantityIncrement = (_id, qty) => {\n        //console.log({_id, qty});\n        const { name, price, img } = cartItems[_id];\n        dispatch(addToCart({ _id, name, price, img }, 1));\n    };\n\n    const onQuantityDecrement = (_id, qty) => {\n        const { name, price, img } = cartItems[_id];\n        dispatch(addToCart({ _id, name, price, img }, -1));\n    };\n\n    const onRemoveCartItem = (_id) => {\n        dispatch(removeCartItem({ productId: _id }));\n    };\n\n    if (props.onlyCartItems) {\n        return (\n            <>\n                {Object.keys(cartItems).map((key, index) => (\n                    <CartItem\n                        key={index}\n                        cartItem={cartItems[key]}\n                        onQuantityInc={onQuantityIncrement}\n                        onQuantityDec={onQuantityDecrement}\n                    />\n                ))}\n            </>\n        );\n    }\n\n    return (\n        <Layout>\n            <div className=\"cartContainer\" style={{ alignItems: \"flex-start\" }}>\n                <Card\n                    headerLeft={`My Cart`}\n                    headerRight={<div>Deliver to</div>}\n                    style={{ width: \"calc(100% - 400px)\", overflow: \"hidden\" }}\n                >\n                    {Object.keys(cartItems).map((key, index) => (\n                        <CartItem\n                            key={index}\n                            cartItem={cartItems[key]}\n                            onQuantityInc={onQuantityIncrement}\n                            onQuantityDec={onQuantityDecrement}\n                            onRemoveCartItem={onRemoveCartItem}\n                        />\n                    ))}\n\n                    <div\n                        style={{\n                            width: \"100%\",\n                            display: \"flex\",\n                            background: \"#ffffff\",\n                            justifyContent: \"flex-end\",\n                            boxShadow: \"0 0 10px 10px #eee\",\n                            padding: \"10px 0\",\n                            boxSizing: \"border-box\",\n                        }}\n                    >\n                        <div style={{ width: \"250px\" }}>\n                            <MaterialButton\n                                title=\"PLACE ORDER\"\n                                onClick={() => props.history.push(`/checkout`)}\n                            />\n                        </div>\n                    </div>\n                </Card>\n                <PriceDetails\n                    totalItem={Object.keys(cart.cartItems).reduce(function (qty, key) {\n                        return qty + cart.cartItems[key].qty;\n                    }, 0)}\n                    totalPrice={Object.keys(cart.cartItems).reduce((totalPrice, key) => {\n                        const { price, qty } = cart.cartItems[key];\n                        return totalPrice + price * qty;\n                    }, 0)}\n                />\n            </div>\n        </Layout>\n    );\n};\n\nexport default CartPage;","/home/yudaaditya/Desktop/ladaza-project/client/src/reducers/cart.reducer.js",["192","193"],"import { cartConstants } from \"../actions/constants\";\n\nconst initState = {\n    cartItems: {\n        // 123: {\n        //     _id: 123,\n        //     name: 'Samsung mobile',\n        //     img: 'some.jpg',\n        //     price: 200,\n        //     qty: 1,\n        // }\n    },\n    updatingCart: false,\n    error: null\n};\n\nexport default (state = initState, action) => {\n    switch(action.type){\n        case cartConstants.ADD_TO_CART_REQUEST:\n            state = {\n                ...state,\n                updatingCart: true\n            }\n            break;\n        case cartConstants.ADD_TO_CART_SUCCESS:\n            state = {\n                ...state,\n                cartItems: action.payload.cartItems,\n                updatingCart: false\n            }\n            break;\n        case cartConstants.ADD_TO_CART_FAILURE:\n            state = {\n                ...state,\n                updatingCart: false,\n                error: action.payload.error\n            }\n            break;\n        case cartConstants.RESET_CART:\n            state = {\n                ...initState\n            }\n    }\n    return state;\n}","/home/yudaaditya/Desktop/ladaza-project/client/src/containers/CartPage/CartItem/index.js",[],"/home/yudaaditya/Desktop/ladaza-project/client/src/actions/user.action.js",[],"/home/yudaaditya/Desktop/ladaza-project/client/src/containers/CheckoutPage/index.js",["194","195"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addOrder, getAddress, getCartItems } from \"../../actions\";\nimport Layout from \"../../components/Layout\";\nimport {\n    Anchor,\n    MaterialButton,\n    MaterialInput,\n} from \"../../components/MaterialUI\";\nimport PriceDetails from \"../../components/PriceDetails\";\nimport Card from \"../../components/UI/Card\";\nimport CartPage from \"../CartPage\";\nimport AddressForm from \"./AddressForm\";\n\nimport \"./style.css\";\n\n/**\n * @author\n * @function CheckoutPage\n **/\n\nconst CheckoutStep = (props) => {\n    return (\n        <div className=\"checkoutStep\">\n            <div\n                onClick={props.onClick}\n                className={`checkoutHeader ${props.active && \"active\"}`}\n            >\n                <div>\n                    <span className=\"stepNumber\">{props.stepNumber}</span>\n                    <span className=\"stepTitle\">{props.title}</span>\n                </div>\n            </div>\n            {props.body && props.body}\n        </div>\n    );\n};\n\nconst Address = ({\n    adr,\n    selectAddress,\n    enableAddressEditForm,\n    confirmDeliveryAddress,\n    onAddressSubmit,\n}) => {\n    return (\n        <div className=\"flexRow addressContainer\">\n            <div>\n                <input name=\"address\" onClick={() => selectAddress(adr)} type=\"radio\" />\n            </div>\n            <div className=\"flexRow sb addressinfo\">\n                {!adr.edit ? (\n                    <div style={{ width: \"100%\" }}>\n                        <div className=\"addressDetail\">\n                            <div>\n                                <span className=\"addressName\">{adr.name}</span>\n                                <span className=\"addressType\">{adr.addressType}</span>\n                                <span className=\"addressMobileNumber\">{adr.mobileNumber}</span>\n                            </div>\n                            {adr.selected && (\n                                <Anchor\n                                    name=\"EDIT\"\n                                    onClick={() => enableAddressEditForm(adr)}\n                                    style={{\n                                        fontWeight: \"500\",\n                                        color: \"#2874f0\",\n                                    }}\n                                />\n                            )}\n                        </div>\n                        <div className=\"fullAddress\">\n                            {adr.address} <br /> {`${adr.state} - ${adr.pinCode}`}\n                        </div>\n                        {adr.selected && (\n                            <MaterialButton\n                                title=\"DELIVERY HERE\"\n                                onClick={() => confirmDeliveryAddress(adr)}\n                                style={{\n                                    width: \"200px\",\n                                    margin: \"10px 0\",\n                                }}\n                            />\n                        )}\n                    </div>\n                ) : (\n                        <AddressForm\n                            withoutLayout={true}\n                            onSubmitForm={onAddressSubmit}\n                            initialData={adr}\n                            onCancel={() => { }}\n                        />\n                    )}\n            </div>\n        </div>\n    );\n};\n\nconst CheckoutPage = (props) => {\n    const user = useSelector((state) => state.user);\n    const auth = useSelector((state) => state.auth);\n    const [newAddress, setNewAddress] = useState(false);\n    const [address, setAddress] = useState([]);\n    const [confirmAddress, setConfirmAddress] = useState(false);\n    const [selectedAddress, setSelectedAddress] = useState(null);\n    const [orderSummary, setOrderSummary] = useState(false);\n    const [orderConfirmation, setOrderConfirmation] = useState(false);\n    const [paymentOption, setPaymentOption] = useState(false);\n    const [confirmOrder, setConfirmOrder] = useState(false);\n    const cart = useSelector((state) => state.cart);\n    const dispatch = useDispatch();\n\n    const onAddressSubmit = (addr) => {\n        setSelectedAddress(addr);\n        setConfirmAddress(true);\n        setOrderSummary(true);\n    };\n\n    const selectAddress = (addr) => {\n        //console.log(addr);\n        const updatedAddress = address.map((adr) =>\n            adr._id === addr._id\n                ? { ...adr, selected: true }\n                : { ...adr, selected: false }\n        );\n        setAddress(updatedAddress);\n    };\n\n    const confirmDeliveryAddress = (addr) => {\n        setSelectedAddress(addr);\n        setConfirmAddress(true);\n        setOrderSummary(true);\n    };\n\n    const enableAddressEditForm = (addr) => {\n        const updatedAddress = address.map((adr) =>\n            adr._id === addr._id ? { ...adr, edit: true } : { ...adr, edit: false }\n        );\n        setAddress(updatedAddress);\n    };\n\n    const userOrderConfirmation = () => {\n        setOrderConfirmation(true);\n        setOrderSummary(false);\n        setPaymentOption(true);\n    };\n\n    const onConfirmOrder = () => {\n        const totalAmount = Object.keys(cart.cartItems).reduce(\n            (totalPrice, key) => {\n                const { price, qty } = cart.cartItems[key];\n                return totalPrice + price * qty;\n            },\n            0\n        );\n        const items = Object.keys(cart.cartItems).map((key) => ({\n            productId: key,\n            payablePrice: cart.cartItems[key].price,\n            purchasedQty: cart.cartItems[key].qty,\n        }));\n        const payload = {\n            addressId: selectedAddress._id,\n            totalAmount,\n            items,\n            paymentStatus: \"pending\",\n            paymentType: \"cod\",\n        };\n\n        console.log(payload);\n        dispatch(addOrder(payload));\n        setConfirmOrder(true);\n    };\n\n    useEffect(() => {\n        auth.authenticate && dispatch(getAddress());\n        auth.authenticate && dispatch(getCartItems());\n    }, [auth.authenticate]);\n\n    useEffect(() => {\n        const address = user.address.map((adr) => ({\n            ...adr,\n            selected: false,\n            edit: false,\n        }));\n        setAddress(address);\n        //user.address.length === 0 && setNewAddress(true);\n    }, [user.address]);\n\n    useEffect(() => {\n        if (confirmOrder && user.placedOrderId) {\n            props.history.push(`/order_details/${user.placedOrderId}`);\n        }\n    }, [user.placedOrderId]);\n\n    return (\n        <Layout>\n            <div className=\"cartContainer\" style={{ alignItems: \"flex-start\" }}>\n                <div className=\"checkoutContainer\">\n                    {/* check if user logged in or not */}\n                    <CheckoutStep\n                        stepNumber={\"1\"}\n                        title={\"LOGIN\"}\n                        active={!auth.authenticate}\n                        body={\n                            auth.authenticate ? (\n                                <div className=\"loggedInId\">\n                                    <span style={{ fontWeight: 500 }}>{auth.user.fullName}</span>\n                                    <span style={{ margin: \"0 5px\" }}>{auth.user.email}</span>\n                                </div>\n                            ) : (\n                                    <div>\n                                        <MaterialInput label=\"Email\" />\n                                    </div>\n                                )\n                        }\n                    />\n                    <CheckoutStep\n                        stepNumber={\"2\"}\n                        title={\"DELIVERY ADDRESS\"}\n                        active={!confirmAddress && auth.authenticate}\n                        body={\n                            <>\n                                {confirmAddress ? (\n                                    <div className=\"stepCompleted\">{`${selectedAddress.name} ${selectedAddress.address} - ${selectedAddress.pinCode}`}</div>\n                                ) : (\n                                        address.map((adr) => (\n                                            <Address\n                                                selectAddress={selectAddress}\n                                                enableAddressEditForm={enableAddressEditForm}\n                                                confirmDeliveryAddress={confirmDeliveryAddress}\n                                                onAddressSubmit={onAddressSubmit}\n                                                adr={adr}\n                                            />\n                                        ))\n                                    )}\n                            </>\n                        }\n                    />\n\n                    {/* AddressForm */}\n                    {confirmAddress ? null : newAddress ? (\n                        <AddressForm onSubmitForm={onAddressSubmit} onCancel={() => { }} />\n                    ) : auth.authenticate ? (\n                        <CheckoutStep\n                            stepNumber={\"+\"}\n                            title={\"ADD NEW ADDRESS\"}\n                            active={false}\n                            onClick={() => setNewAddress(true)}\n                        />\n                    ) : null}\n\n                    <CheckoutStep\n                        stepNumber={\"3\"}\n                        title={\"ORDER SUMMARY\"}\n                        active={orderSummary}\n                        body={\n                            orderSummary ? (\n                                <CartPage onlyCartItems={true} />\n                            ) : orderConfirmation ? (\n                                <div className=\"stepCompleted\">\n                                    {Object.keys(cart.cartItems).length} items\n                                </div>\n                            ) : null\n                        }\n                    />\n\n                    {orderSummary && (\n                        <Card\n                            style={{\n                                margin: \"10px 0\",\n                            }}\n                        >\n                            <div\n                                className=\"flexRow sb\"\n                                style={{\n                                    padding: \"20px\",\n                                    alignItems: \"center\",\n                                }}\n                            >\n                                <p style={{ fontSize: \"12px\" }}>\n                                    Order confirmation email will be sent to{\" \"}\n                                    <strong>{auth.user.email}</strong>\n                                </p>\n                                <MaterialButton\n                                    title=\"CONTINUE\"\n                                    onClick={userOrderConfirmation}\n                                    style={{\n                                        width: \"200px\",\n                                    }}\n                                />\n                            </div>\n                        </Card>\n                    )}\n\n                    <CheckoutStep\n                        stepNumber={\"4\"}\n                        title={\"PAYMENT OPTIONS\"}\n                        active={paymentOption}\n                        body={\n                            paymentOption && (\n                                <div>\n                                    <div\n                                        className=\"flexRow\"\n                                        style={{\n                                            alignItems: \"center\",\n                                            padding: \"20px\",\n                                        }}\n                                    >\n                                        <input type=\"radio\" name=\"paymentOption\" value=\"cod\" />\n                                        <div>Cash on delivery</div>\n                                    </div>\n                                    <MaterialButton\n                                        title=\"CONFIRM ORDER\"\n                                        onClick={onConfirmOrder}\n                                        style={{\n                                            width: \"200px\",\n                                            margin: \"0 0 20px 20px\",\n                                        }}\n                                    />\n                                </div>\n                            )\n                        }\n                    />\n                </div>\n\n                {/* Price Component */}\n                <PriceDetails\n                    totalItem={Object.keys(cart.cartItems).reduce(function (qty, key) {\n                        return qty + cart.cartItems[key].qty;\n                    }, 0)}\n                    totalPrice={Object.keys(cart.cartItems).reduce((totalPrice, key) => {\n                        const { price, qty } = cart.cartItems[key];\n                        return totalPrice + price * qty;\n                    }, 0)}\n                />\n            </div>\n        </Layout>\n    );\n};\n\nexport default CheckoutPage;","/home/yudaaditya/Desktop/ladaza-project/client/src/containers/CheckoutPage/AddressForm.js",["196","197"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addAddress } from \"../../actions\";\nimport { MaterialButton, MaterialInput } from \"../../components/MaterialUI\";\n\n/**\n * @author\n * @function AddressForm\n **/\n\nconst AddressForm = (props) => {\n    const { initialData } = props;\n    const [name, setName] = useState(initialData ? initialData.name : \"\");\n    const [mobileNumber, setMobileNumber] = useState(\n        initialData ? initialData.mobileNumber : \"\"\n    );\n    const [pinCode, setPinCode] = useState(\n        initialData ? initialData.pinCode : \"\"\n    );\n    const [locality, setLocality] = useState(\n        initialData ? initialData.locality : \"\"\n    );\n    const [address, setAddress] = useState(\n        initialData ? initialData.address : \"\"\n    );\n    const [cityDistrictTown, setCityDistrictTown] = useState(\n        initialData ? initialData.cityDistrictTown : \"\"\n    );\n    const [state, setState] = useState(initialData ? initialData.state : \"\");\n    const [landmark, setLandmark] = useState(\n        initialData ? initialData.landmark : \"\"\n    );\n    const [alternatePhone, setAlternatePhone] = useState(\n        initialData ? initialData.alternatePhone : \"\"\n    );\n    const [addressType, setAddressType] = useState(\n        initialData ? initialData.addressType : \"\"\n    );\n    const dispatch = useDispatch();\n    const user = useSelector((state) => state.user);\n    const [submitFlag, setSubmitFlag] = useState(false);\n    const [id, setId] = useState(initialData ? initialData._id : \"\");\n\n    const inputContainer = {\n        width: \"100%\",\n        marginRight: 10,\n    };\n\n    const onAddressSubmit = (e) => {\n        const payload = {\n            address: {\n                name,\n                mobileNumber,\n                pinCode,\n                locality,\n                address,\n                cityDistrictTown,\n                state,\n                landmark,\n                alternatePhone,\n                addressType,\n            },\n        };\n        console.log(payload);\n        if (id) {\n            payload.address._id = id;\n        }\n        dispatch(addAddress(payload));\n        setSubmitFlag(true);\n    };\n\n    useEffect(() => {\n        console.log(\"addressCount\", user.address);\n        if (submitFlag) {\n            console.log(\"where are we\", user);\n            let _address = {};\n            if (id) {\n                _address = {\n                    _id: id,\n                    name,\n                    mobileNumber,\n                    pinCode,\n                    locality,\n                    address,\n                    cityDistrictTown,\n                    state,\n                    landmark,\n                    alternatePhone,\n                    addressType,\n                };\n            } else {\n                _address = user.address.slice(user.address.length - 1)[0];\n            }\n\n            props.onSubmitForm(_address);\n        }\n    }, [user.address]);\n\n    const renderAddressForm = () => {\n        return (\n            <>\n                <div className=\"flexRow\">\n                    <div style={inputContainer}>\n                        <MaterialInput\n                            label=\"Name\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        />\n                    </div>\n                    <div style={inputContainer}>\n                        <MaterialInput\n                            label=\"10-digit mobile number\"\n                            value={mobileNumber}\n                            onChange={(e) => setMobileNumber(e.target.value)}\n                        />\n                    </div>\n                </div>\n                <div className=\"flexRow\">\n                    <div style={inputContainer}>\n                        <MaterialInput\n                            label=\"Pincode\"\n                            value={pinCode}\n                            onChange={(e) => setPinCode(e.target.value)}\n                        />\n                    </div>\n                    <div style={inputContainer}>\n                        <MaterialInput\n                            label=\"Locality\"\n                            value={locality}\n                            onChange={(e) => setLocality(e.target.value)}\n                        />\n                    </div>\n                </div>\n                <div className=\"flexRow\">\n                    <div style={inputContainer}>\n                        <MaterialInput\n                            label=\"Address\"\n                            value={address}\n                            onChange={(e) => setAddress(e.target.value)}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"flexRow\">\n                    <div style={inputContainer}>\n                        <MaterialInput\n                            label=\"City/District/Town\"\n                            value={cityDistrictTown}\n                            onChange={(e) => setCityDistrictTown(e.target.value)}\n                        />\n                    </div>\n                    <div style={inputContainer}>\n                        <MaterialInput\n                            label=\"State\"\n                            value={state}\n                            onChange={(e) => setState(e.target.value)}\n                        />\n                    </div>\n                </div>\n                <div className=\"flexRow\">\n                    <div style={inputContainer}>\n                        <MaterialInput\n                            label=\"Landmark (Optional)\"\n                            value={landmark}\n                            onChange={(e) => setLandmark(e.target.value)}\n                        />\n                    </div>\n                    <div style={inputContainer}>\n                        <MaterialInput\n                            label=\"Alternate Phone (Optional)\"\n                            value={alternatePhone}\n                            onChange={(e) => setAlternatePhone(e.target.value)}\n                        />\n                    </div>\n                </div>\n                <div>\n                    <label>Address Type</label>\n                    <div className=\"flexRow\">\n                        <div>\n                            <input\n                                type=\"radio\"\n                                onClick={() => setAddressType(\"home\")}\n                                name=\"addressType\"\n                                value=\"home\"\n                            />\n                            <span>Home</span>\n                        </div>\n                        <div>\n                            <input\n                                type=\"radio\"\n                                onClick={() => setAddressType(\"work\")}\n                                name=\"addressType\"\n                                value=\"work\"\n                            />\n                            <span>Work</span>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flexRow\">\n                    <MaterialButton\n                        title=\"SAVE AND DELIVER HERE\"\n                        onClick={onAddressSubmit}\n                        style={{\n                            width: \"250px\",\n                            margin: \"20px 0\",\n                        }}\n                    />\n                </div>\n            </>\n        );\n    };\n\n    if (props.withoutLayout) {\n        return <div>{renderAddressForm()}</div>;\n    }\n\n    return (\n        <div className=\"checkoutStep\" style={{ background: \"#f5faff\" }}>\n            <div className={`checkoutHeader`}>\n                <div>\n                    <span className=\"stepNumber\">+</span>\n                    <span className=\"stepTitle\">{\"ADD NEW ADDRESS\"}</span>\n                </div>\n            </div>\n            <div\n                style={{\n                    padding: \"0 60px\",\n                    paddingBottom: \"20px\",\n                    boxSizing: \"border-box\",\n                }}\n            >\n                {renderAddressForm()}\n            </div>\n        </div>\n    );\n};\n\nexport default AddressForm;","/home/yudaaditya/Desktop/ladaza-project/client/src/reducers/user.reducer.js",["198","199"],"import { userConstants } from \"../actions/constants\"\n\nconst initState = {\n    address: [],\n    error: null,\n    loading: false\n}\n    ;\nexport default (state = initState, action) => {\n    switch(action.type) {\n        case userConstants.GET_USER_ADDRESS_REQUEST:\n        state = {\n            ...state,\n            loading: true,\n        };\n        break;\n        case userConstants.GET_USER_ADDRESS_SUCCESS:\n        state = {\n            ...state,\n            address: action.payload.address,\n            loading: false,\n        };\n        break;\n        case userConstants.GET_USER_ADDRESS_FAILURE:\n        state = {\n            ...state,\n            loading: false,\n            error: action.payload.error,\n        };\n        break;\n        case userConstants.ADD_USER_ADDRESS_REQUEST:\n        state = {\n            ...state,\n            loading: true,\n        };\n        break;\n        case userConstants.ADD_USER_ADDRESS_SUCCESS:\n        state = {\n            ...state,\n            address: action.payload.address,\n            loading: false,\n        };\n        break;\n        case userConstants.ADD_USER_ADDRESS_FAILURE:\n        state = {\n            ...state,\n            loading: false,\n            error: action.payload.error,\n        };\n        break;\n    }\n\n\n    return state;\n}; ","/home/yudaaditya/Desktop/ladaza-project/client/src/components/PriceDetails/index.js",[],{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":21,"column":6,"nodeType":"206","endLine":21,"endColumn":25,"suggestions":"207"},{"ruleId":"204","severity":1,"message":"205","line":26,"column":6,"nodeType":"206","endLine":26,"endColumn":8,"suggestions":"208"},{"ruleId":"209","severity":1,"message":"210","line":5,"column":26,"nodeType":"211","messageId":"212","endLine":5,"endColumn":35},{"ruleId":"209","severity":1,"message":"213","line":28,"column":12,"nodeType":"211","messageId":"212","endLine":28,"endColumn":17},{"ruleId":"209","severity":1,"message":"214","line":28,"column":19,"nodeType":"211","messageId":"212","endLine":28,"endColumn":27},{"ruleId":"204","severity":1,"message":"205","line":69,"column":8,"nodeType":"206","endLine":69,"endColumn":10,"suggestions":"215"},{"ruleId":"216","severity":1,"message":"217","line":74,"column":23,"nodeType":"218","endLine":74,"endColumn":47},{"ruleId":"216","severity":1,"message":"217","line":100,"column":21,"nodeType":"218","endLine":106,"endColumn":22},{"ruleId":"216","severity":1,"message":"217","line":128,"column":25,"nodeType":"218","endLine":134,"endColumn":26},{"ruleId":"216","severity":1,"message":"219","line":213,"column":21,"nodeType":"218","endLine":213,"endColumn":32},{"ruleId":"216","severity":1,"message":"217","line":216,"column":21,"nodeType":"218","endLine":216,"endColumn":55},{"ruleId":"216","severity":1,"message":"217","line":251,"column":29,"nodeType":"218","endLine":251,"endColumn":49},{"ruleId":"220","severity":1,"message":"221","line":14,"column":1,"nodeType":"222","endLine":69,"endColumn":3},{"ruleId":"223","severity":1,"message":"224","line":15,"column":5,"nodeType":"225","messageId":"226","endLine":66,"endColumn":6},{"ruleId":"220","severity":1,"message":"221","line":53,"column":1,"nodeType":"222","endLine":86,"endColumn":2},{"ruleId":"223","severity":1,"message":"224","line":54,"column":5,"nodeType":"225","messageId":"226","endLine":83,"endColumn":6},{"ruleId":"220","severity":1,"message":"221","line":18,"column":1,"nodeType":"222","endLine":61,"endColumn":2},{"ruleId":"223","severity":1,"message":"224","line":22,"column":5,"nodeType":"225","messageId":"226","endLine":57,"endColumn":6},{"ruleId":"204","severity":1,"message":"227","line":30,"column":8,"nodeType":"206","endLine":30,"endColumn":10,"suggestions":"228"},{"ruleId":"216","severity":1,"message":"219","line":90,"column":33,"nodeType":"218","endLine":90,"endColumn":45},{"ruleId":"216","severity":1,"message":"219","line":94,"column":33,"nodeType":"218","endLine":94,"endColumn":45},{"ruleId":"216","severity":1,"message":"219","line":98,"column":33,"nodeType":"218","endLine":98,"endColumn":45},{"ruleId":"216","severity":1,"message":"219","line":102,"column":33,"nodeType":"218","endLine":102,"endColumn":45},{"ruleId":"220","severity":1,"message":"221","line":1,"column":1,"nodeType":"222","endLine":17,"endColumn":2},{"ruleId":"209","severity":1,"message":"229","line":16,"column":24,"nodeType":"211","messageId":"212","endLine":16,"endColumn":37},{"ruleId":"204","severity":1,"message":"227","line":28,"column":8,"nodeType":"206","endLine":28,"endColumn":10,"suggestions":"230"},{"ruleId":"204","severity":1,"message":"231","line":27,"column":8,"nodeType":"206","endLine":27,"endColumn":10,"suggestions":"232"},{"ruleId":"204","severity":1,"message":"205","line":18,"column":8,"nodeType":"206","endLine":18,"endColumn":10,"suggestions":"233"},{"ruleId":"204","severity":1,"message":"205","line":40,"column":8,"nodeType":"206","endLine":40,"endColumn":27,"suggestions":"234"},{"ruleId":"220","severity":1,"message":"221","line":17,"column":1,"nodeType":"222","endLine":45,"endColumn":2},{"ruleId":"223","severity":1,"message":"224","line":18,"column":5,"nodeType":"225","messageId":"226","endLine":43,"endColumn":6},{"ruleId":"204","severity":1,"message":"205","line":176,"column":8,"nodeType":"206","endLine":176,"endColumn":27,"suggestions":"235"},{"ruleId":"204","severity":1,"message":"236","line":192,"column":8,"nodeType":"206","endLine":192,"endColumn":28,"suggestions":"237"},{"ruleId":"209","severity":1,"message":"238","line":42,"column":16,"nodeType":"211","messageId":"212","endLine":42,"endColumn":21},{"ruleId":"204","severity":1,"message":"239","line":97,"column":8,"nodeType":"206","endLine":97,"endColumn":22,"suggestions":"240"},{"ruleId":"220","severity":1,"message":"221","line":9,"column":1,"nodeType":"222","endLine":55,"endColumn":3},{"ruleId":"223","severity":1,"message":"224","line":10,"column":5,"nodeType":"225","messageId":"226","endLine":51,"endColumn":6},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["243"],["244"],"no-unused-vars","'IoIosCart' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'setError' is assigned a value but never used.",["245"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'dispatch' and 'props'. Either include them or remove the dependency array.",["246"],"'setPriceRange' is assigned a value but never used.",["247"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.location.search'. Either include them or remove the dependency array.",["248"],["249"],["250"],["251"],"React Hook useEffect has missing dependencies: 'confirmOrder' and 'props.history'. Either include them or remove the dependency array.",["252"],"'setId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'address', 'addressType', 'alternatePhone', 'cityDistrictTown', 'id', 'landmark', 'locality', 'mobileNumber', 'name', 'pinCode', 'props', 'state', 'submitFlag', and 'user'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["253"],"no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"256","fix":"258"},{"desc":"259","fix":"260"},{"desc":"259","fix":"261"},{"desc":"262","fix":"263"},{"desc":"256","fix":"264"},{"desc":"254","fix":"265"},{"desc":"254","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},"Update the dependencies array to be: [auth.authenticate, dispatch]",{"range":"271","text":"272"},"Update the dependencies array to be: [dispatch]",{"range":"273","text":"274"},{"range":"275","text":"274"},"Update the dependencies array to be: [dispatch, props]",{"range":"276","text":"277"},{"range":"278","text":"277"},"Update the dependencies array to be: [dispatch, props.location.search]",{"range":"279","text":"280"},{"range":"281","text":"274"},{"range":"282","text":"272"},{"range":"283","text":"272"},"Update the dependencies array to be: [confirmOrder, props.history, user.placedOrderId]",{"range":"284","text":"285"},"Update the dependencies array to be: [address, addressType, alternatePhone, cityDistrictTown, id, landmark, locality, mobileNumber, name, pinCode, props, state, submitFlag, user, user.address]",{"range":"286","text":"287"},[719,738],"[auth.authenticate, dispatch]",[835,837],"[dispatch]",[1846,1848],[941,943],"[dispatch, props]",[779,781],[805,807],"[dispatch, props.location.search]",[405,407],[1148,1167],[6079,6098],[6539,6559],"[confirmOrder, props.history, user.placedOrderId]",[2978,2992],"[address, addressType, alternatePhone, cityDistrictTown, id, landmark, locality, mobileNumber, name, pinCode, props, state, submitFlag, user, user.address]"]